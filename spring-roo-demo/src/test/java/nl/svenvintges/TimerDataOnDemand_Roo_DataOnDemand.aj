// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.svenvintges;

import java.util.List;
import java.util.Random;
import nl.svenvintges.Timer;
import org.springframework.stereotype.Component;

privileged aspect TimerDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TimerDataOnDemand: @Component;
    
    private Random TimerDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Timer> TimerDataOnDemand.data;
    
    public Timer TimerDataOnDemand.getNewTransientTimer(int index) {
        nl.svenvintges.Timer obj = new nl.svenvintges.Timer();
        obj.setMessage("message_" + index);
        obj.setSven(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setDemo2(new Integer(index).doubleValue());
        return obj;
    }
    
    public Timer TimerDataOnDemand.getSpecificTimer(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Timer obj = data.get(index);
        return Timer.findTimer(obj.getId());
    }
    
    public Timer TimerDataOnDemand.getRandomTimer() {
        init();
        Timer obj = data.get(rnd.nextInt(data.size()));
        return Timer.findTimer(obj.getId());
    }
    
    public boolean TimerDataOnDemand.modifyTimer(Timer obj) {
        return false;
    }
    
    public void TimerDataOnDemand.init() {
        data = nl.svenvintges.Timer.findTimerEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Timer' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<nl.svenvintges.Timer>();
        for (int i = 0; i < 10; i++) {
            nl.svenvintges.Timer obj = getNewTransientTimer(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
